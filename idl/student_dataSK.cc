// This file is generated by omniidl (C++ backend)- omniORB_4_2. Do not edit.

#include "student_data.hh"
#include <omniORB4/IOP_S.h>
#include <omniORB4/IOP_C.h>
#include <omniORB4/callDescriptor.h>
#include <omniORB4/callHandle.h>
#include <omniORB4/objTracker.h>


OMNI_USING_NAMESPACE(omni)

static const char* _0RL_library_version = omniORB_4_2;



StudentInfo_ptr StudentInfo_Helper::_nil() {
  return ::StudentInfo::_nil();
}

::CORBA::Boolean StudentInfo_Helper::is_nil(::StudentInfo_ptr p) {
  return ::CORBA::is_nil(p);

}

void StudentInfo_Helper::release(::StudentInfo_ptr p) {
  ::CORBA::release(p);
}

void StudentInfo_Helper::marshalObjRef(::StudentInfo_ptr obj, cdrStream& s) {
  ::StudentInfo::_marshalObjRef(obj, s);
}

StudentInfo_ptr StudentInfo_Helper::unmarshalObjRef(cdrStream& s) {
  return ::StudentInfo::_unmarshalObjRef(s);
}

void StudentInfo_Helper::duplicate(::StudentInfo_ptr obj) {
  if (obj && !obj->_NP_is_nil())  omni::duplicateObjRef(obj);
}

StudentInfo_ptr
StudentInfo::_duplicate(::StudentInfo_ptr obj)
{
  if (obj && !obj->_NP_is_nil())  omni::duplicateObjRef(obj);
  return obj;
}

StudentInfo_ptr
StudentInfo::_narrow(::CORBA::Object_ptr obj)
{
  if (!obj || obj->_NP_is_nil() || obj->_NP_is_pseudo()) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_realNarrow(_PD_repoId);
  return e ? e : _nil();
}


StudentInfo_ptr
StudentInfo::_unchecked_narrow(::CORBA::Object_ptr obj)
{
  if (!obj || obj->_NP_is_nil() || obj->_NP_is_pseudo()) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_uncheckedNarrow(_PD_repoId);
  return e ? e : _nil();
}

StudentInfo_ptr
StudentInfo::_nil()
{
#ifdef OMNI_UNLOADABLE_STUBS
  static _objref_StudentInfo _the_nil_obj;
  return &_the_nil_obj;
#else
  static _objref_StudentInfo* _the_nil_ptr = 0;
  if (!_the_nil_ptr) {
    omni::nilRefLock().lock();
    if (!_the_nil_ptr) {
      _the_nil_ptr = new _objref_StudentInfo;
      registerNilCorbaObject(_the_nil_ptr);
    }
    omni::nilRefLock().unlock();
  }
  return _the_nil_ptr;
#endif
}

const char* StudentInfo::_PD_repoId = "IDL:StudentInfo:1.0";


_objref_StudentInfo::~_objref_StudentInfo() {
  
}


_objref_StudentInfo::_objref_StudentInfo(omniIOR* ior, omniIdentity* id) :
   omniObjRef(::StudentInfo::_PD_repoId, ior, id, 1)
   
   
{
  _PR_setobj(this);
}

void*
_objref_StudentInfo::_ptrToObjRef(const char* id)
{
  if (id == ::StudentInfo::_PD_repoId)
    return (::StudentInfo_ptr) this;
  
  if (id == ::CORBA::Object::_PD_repoId)
    return (::CORBA::Object_ptr) this;

  if (omni::strMatch(id, ::StudentInfo::_PD_repoId))
    return (::StudentInfo_ptr) this;
  
  if (omni::strMatch(id, ::CORBA::Object::_PD_repoId))
    return (::CORBA::Object_ptr) this;

  return 0;
}


//
// Code for StudentInfo::SetStudentData

// Proxy call descriptor class. Mangled signature:
//  _clong
class _0RL_cd_80d5c52d0a7a1b14_00000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_80d5c52d0a7a1b14_00000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  
  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  ::CORBA::Long result;
};

void _0RL_cd_80d5c52d0a7a1b14_00000000::marshalReturnedValues(cdrStream& _n)
{
  result >>= _n;

}

void _0RL_cd_80d5c52d0a7a1b14_00000000::unmarshalReturnedValues(cdrStream& _n)
{
  (::CORBA::Long&)result <<= _n;

}

const char* const _0RL_cd_80d5c52d0a7a1b14_00000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_80d5c52d0a7a1b14_10000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_80d5c52d0a7a1b14_00000000* tcd = (_0RL_cd_80d5c52d0a7a1b14_00000000*)cd;
  _impl_StudentInfo* impl = (_impl_StudentInfo*) svnt->_ptrToInterface(StudentInfo::_PD_repoId);
  tcd->result = impl->SetStudentData();


}

::CORBA::Long _objref_StudentInfo::SetStudentData()
{
  _0RL_cd_80d5c52d0a7a1b14_00000000 _call_desc(_0RL_lcfn_80d5c52d0a7a1b14_10000000, "SetStudentData", 15);


  _invoke(_call_desc);
  return _call_desc.result;


}


//
// Code for StudentInfo::GetStudentData

// Proxy call descriptor class. Mangled signature:
//  void
class _0RL_cd_80d5c52d0a7a1b14_20000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_80d5c52d0a7a1b14_20000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  
    
  
  static const char* const _user_exns[];

  
};

const char* const _0RL_cd_80d5c52d0a7a1b14_20000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_80d5c52d0a7a1b14_30000000(omniCallDescriptor*, omniServant* svnt)
{
  
  _impl_StudentInfo* impl = (_impl_StudentInfo*) svnt->_ptrToInterface(StudentInfo::_PD_repoId);
  impl->GetStudentData();


}

void _objref_StudentInfo::GetStudentData()
{
  _0RL_cd_80d5c52d0a7a1b14_20000000 _call_desc(_0RL_lcfn_80d5c52d0a7a1b14_30000000, "GetStudentData", 15);


  _invoke(_call_desc);



}

_pof_StudentInfo::~_pof_StudentInfo() {}


omniObjRef*
_pof_StudentInfo::newObjRef(omniIOR* ior, omniIdentity* id)
{
  return new ::_objref_StudentInfo(ior, id);
}


::CORBA::Boolean
_pof_StudentInfo::is_a(const char* id) const
{
  if (omni::ptrStrMatch(id, ::StudentInfo::_PD_repoId))
    return 1;
  
  return 0;
}

const _pof_StudentInfo _the_pof_StudentInfo;

_impl_StudentInfo::~_impl_StudentInfo() {}


::CORBA::Boolean
_impl_StudentInfo::_dispatch(omniCallHandle& _handle)
{
  const char* op = _handle.operation_name();

  if (omni::strMatch(op, "SetStudentData")) {

    _0RL_cd_80d5c52d0a7a1b14_00000000 _call_desc(_0RL_lcfn_80d5c52d0a7a1b14_10000000, "SetStudentData", 15, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "GetStudentData")) {

    _0RL_cd_80d5c52d0a7a1b14_20000000 _call_desc(_0RL_lcfn_80d5c52d0a7a1b14_30000000, "GetStudentData", 15, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }


  return 0;
}

void*
_impl_StudentInfo::_ptrToInterface(const char* id)
{
  if (id == ::StudentInfo::_PD_repoId)
    return (::_impl_StudentInfo*) this;
  
  if (id == ::CORBA::Object::_PD_repoId)
    return (void*) 1;

  if (omni::strMatch(id, ::StudentInfo::_PD_repoId))
    return (::_impl_StudentInfo*) this;
  
  if (omni::strMatch(id, ::CORBA::Object::_PD_repoId))
    return (void*) 1;
  return 0;
}

const char*
_impl_StudentInfo::_mostDerivedRepoId()
{
  return ::StudentInfo::_PD_repoId;
}

POA_StudentInfo::~POA_StudentInfo() {}

